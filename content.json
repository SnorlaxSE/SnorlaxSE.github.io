{"meta":{"title":"SnorlaxSE Blog","subtitle":null,"description":"stay hungry, stay foolish","author":"SnorlaxSE","url":"http://snorlax.top"},"pages":[{"title":"about","date":"2018-12-12T14:14:36.000Z","updated":"2020-03-16T10:41:30.000Z","comments":false,"path":"about/index.html","permalink":"http://snorlax.top/about/index.html","excerpt":"","text":"[さくら荘のhojun] 与&nbsp; Mashiro&nbsp; （ 真（ま）白（しろ） ） 对话中... bot_ui_ini()","keywords":"关于"},{"title":"bangumi","date":"2019-02-10T13:32:48.000Z","updated":"2020-03-16T10:41:30.000Z","comments":false,"path":"bangumi/index.html","permalink":"http://snorlax.top/bangumi/index.html","excerpt":"","text":"","keywords":null},{"title":"client","date":"2018-12-20T15:13:35.000Z","updated":"2020-03-16T10:41:30.000Z","comments":false,"path":"client/index.html","permalink":"http://snorlax.top/client/index.html","excerpt":"","text":"直接下载 or 扫码下载：","keywords":"Android客户端"},{"title":"comment","date":"2018-12-20T15:13:48.000Z","updated":"2020-03-16T10:41:30.000Z","comments":true,"path":"comment/index.html","permalink":"http://snorlax.top/comment/index.html","excerpt":"","text":"念两句诗 叙别梦、扬州一觉。 【宋代】吴文英《夜游宫·人去西楼雁杳》","keywords":"留言板"},{"title":"donate","date":"2018-12-20T15:13:05.000Z","updated":"2020-03-16T10:41:30.000Z","comments":false,"path":"donate/index.html","permalink":"http://snorlax.top/donate/index.html","excerpt":"","text":"","keywords":"谢谢饲主了喵~"},{"title":"相册","date":"2020-05-19T15:52:36.079Z","updated":"2020-05-19T15:52:36.079Z","comments":true,"path":"galleries/index.html","permalink":"http://snorlax.top/galleries/index.html","excerpt":"","text":""},{"title":"lab","date":"2019-01-05T13:47:59.000Z","updated":"2020-03-16T10:41:30.000Z","comments":false,"path":"lab/index.html","permalink":"http://snorlax.top/lab/index.html","excerpt":"","text":"sakura主题balabala","keywords":"Lab实验室"},{"title":"links","date":"2018-12-19T15:11:06.000Z","updated":"2020-03-16T10:41:30.000Z","comments":true,"path":"links/index.html","permalink":"http://snorlax.top/links/index.html","excerpt":"","text":"","keywords":"友人帐"},{"title":"music","date":"2018-12-20T15:14:28.000Z","updated":"2020-05-17T05:06:16.505Z","comments":false,"path":"music/index.html","permalink":"http://snorlax.top/music/index.html","excerpt":"","text":"","keywords":"我的歌单"},{"title":"rss","date":"2018-12-20T15:09:03.000Z","updated":"2020-03-16T10:41:30.000Z","comments":true,"path":"rss/index.html","permalink":"http://snorlax.top/rss/index.html","excerpt":"","text":""},{"title":"theme-sakura","date":"2019-01-04T14:53:25.000Z","updated":"2020-03-16T10:41:30.000Z","comments":false,"path":"theme-sakura/index.html","permalink":"http://snorlax.top/theme-sakura/index.html","excerpt":"","text":"Hexo主题Sakura修改自WordPress主题Sakura，感谢原作者Mashiro","keywords":"Hexo 主题 Sakura 🌸"},{"title":"tags","date":"2018-12-12T14:14:16.000Z","updated":"2020-03-16T10:41:30.000Z","comments":true,"path":"tags/index.html","permalink":"http://snorlax.top/tags/index.html","excerpt":"","text":""},{"title":"video","date":"2018-12-20T15:14:38.000Z","updated":"2020-03-16T10:41:30.000Z","comments":false,"path":"video/index.html","permalink":"http://snorlax.top/video/index.html","excerpt":"","text":"var videos = [ { img: 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '放送时间: 2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' }, { img : 'https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg', title: '朝花夕誓——于离别之朝束起约定之花', status: '已追完', progress: 100, jp: 'さよならの朝に約束の花をかざろう', time: '2018-02-24 SUN.', desc: ' 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。' } ] .should-ellipsis{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:95%;}.should-ellipsis-full{overflow:hidden;text-overflow:ellipsis;white-space:nowrap;width:100%;}.should-ellipsis i{position:absolute;right:24px;}.grey-text{color:#9e9e9e !important}.grey-text.text-darken-4{color:#212121 !important}html{line-height:1.15;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}img{border-style:none}progress{display:inline-block;vertical-align:baseline}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}html{-webkit-box-sizing:border-box;box-sizing:border-box}*,*:before,*:after{-webkit-box-sizing:inherit;box-sizing:inherit}ul:not(.browser-default){padding-left:0;list-style-type:none}ul:not(.browser-default)>li{list-style-type:none}.card{-webkit-box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2);box-shadow:0 2px 2px 0 rgba(0,0,0,0.14),0 3px 1px -2px rgba(0,0,0,0.12),0 1px 5px 0 rgba(0,0,0,0.2)}.hoverable{-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s}.hoverable:hover{-webkit-box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19);box-shadow:0 8px 17px 0 rgba(0,0,0,0.2),0 6px 20px 0 rgba(0,0,0,0.19)}i{line-height:inherit}i.right{float:right;margin-left:15px}.bangumi .right{float:right !important}.material-icons{text-rendering:optimizeLegibility;-webkit-font-feature-settings:'liga';-moz-font-feature-settings:'liga';font-feature-settings:'liga'}.row{margin-left:auto;margin-right:auto;margin-bottom:20px}.row:after{content:\"\";display:table;clear:both}.row .col{float:left;-webkit-box-sizing:border-box;box-sizing:border-box;padding:0 .75rem;min-height:1px}.row .col.s12{width:100%;margin-left:auto;left:auto;right:auto}@media only screen and (min-width:601px){.row .col.m6{width:50%;margin-left:auto;left:auto;right:auto}}html{line-height:1.5;font-family:-apple-system,BlinkMacSystemFont,\"Segoe UI\",Roboto,Oxygen-Sans,Ubuntu,Cantarell,\"Helvetica Neue\",sans-serif;font-weight:normal;color:rgba(0,0,0,0.87)}@media only screen and (min-width:0){html{font-size:14px}}@media only screen and (min-width:992px){html{font-size:14.5px}}@media only screen and (min-width:1200px){html{font-size:15px}}.card{position:relative;margin:.5rem 0 1rem 0;background-color:#fff;-webkit-transition:-webkit-box-shadow .25s;transition:-webkit-box-shadow .25s;transition:box-shadow .25s;transition:box-shadow .25s,-webkit-box-shadow .25s;border-radius:2px}.card .card-title{font-size:24px;font-weight:300}.card .card-title.activator{cursor:pointer}.card .card-image{position:relative}.card .card-image img{display:block;border-radius:2px 2px 0 0;position:relative;left:0;right:0;top:0;bottom:0;width:100%}.card .card-content{padding:24px;border-radius:0 0 2px 2px}.card .card-content p{margin:0}.card .card-content .card-title{display:block;line-height:32px;margin-bottom:8px}.card .card-content .card-title i{line-height:32px}.card .card-reveal{padding:24px;position:absolute;background-color:#fff;width:100%;overflow-y:auto;left:0;top:100%;height:100%;z-index:3;display:none}.card .card-reveal .card-title{cursor:pointer;display:block}.waves-effect{position:relative;cursor:pointer;display:inline-block;overflow:hidden;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-tap-highlight-color:transparent;vertical-align:middle;z-index:1;-webkit-transition:.3s ease-out;transition:.3s ease-out}.waves-effect img{position:relative;z-index:-1}.waves-block{display:block}::-webkit-input-placeholder{color:#d1d1d1}::-moz-placeholder{color:#d1d1d1}:-ms-input-placeholder{color:#d1d1d1}::-ms-input-placeholder{color:#d1d1d1}[type=\"radio\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"radio\"]:not(:checked)+span{position:relative;padding-left:35px;cursor:pointer;display:inline-block;height:25px;line-height:25px;font-size:1rem;-webkit-transition:.28s ease;transition:.28s ease;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border-radius:50%}[type=\"radio\"]:not(:checked)+span:before,[type=\"radio\"]:not(:checked)+span:after{border:2px solid #5a5a5a}[type=\"radio\"]:not(:checked)+span:after{-webkit-transform:scale(0);transform:scale(0)}[type=\"checkbox\"]:not(:checked){position:absolute;opacity:0;pointer-events:none}[type=\"checkbox\"]:not(:checked):disabled+span:not(.lever):before{border:none;background-color:rgba(0,0,0,0.42)}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):before{width:0;height:0;border:3px solid transparent;left:6px;top:10px;-webkit-transform:rotateZ(37deg);transform:rotateZ(37deg);-webkit-transform-origin:100% 100%;transform-origin:100% 100%}[type=\"checkbox\"].filled-in:not(:checked)+span:not(.lever):after{height:20px;width:20px;background-color:transparent;border:2px solid #5a5a5a;top:0px;z-index:0}input[type=checkbox]:not(:disabled) ~ .lever:active:before,input[type=checkbox]:not(:disabled).tabbed:focus ~ .lever::before{-webkit-transform:scale(2.4);transform:scale(2.4);background-color:rgba(0,0,0,0.08)}input[type=range].focused:focus:not(.active)::-webkit-slider-thumb{-webkit-box-shadow:0 0 0 10px rgba(38,166,154,0.26);box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-moz-range-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)}input[type=range].focused:focus:not(.active)::-ms-thumb{box-shadow:0 0 0 10px rgba(38,166,154,0.26)} 番组计划 这里将是永远的回忆 window.onload = function(){ videos.forEach(function(video, i){ $('#rootRow').append(` ${video.title} ${video.jp} ${video.status} ${video.title} ${video.jp} 放送时间: ${video.time} ${video.desc} ${video.status} `) }) }","keywords":"B站"},{"title":"2017","date":"2020-05-19T15:40:05.806Z","updated":"2020-05-19T15:39:51.980Z","comments":true,"path":"galleries/2017/index.html","permalink":"http://snorlax.top/galleries/2017/index.html","excerpt":"","text":""},{"title":"2018","date":"2020-05-19T15:40:23.186Z","updated":"2020-05-19T15:40:23.186Z","comments":true,"path":"galleries/2018/index.html","permalink":"http://snorlax.top/galleries/2018/index.html","excerpt":"","text":""},{"title":"2019","date":"2020-05-19T15:40:28.585Z","updated":"2020-05-19T15:40:28.585Z","comments":true,"path":"galleries/2019/index.html","permalink":"http://snorlax.top/galleries/2019/index.html","excerpt":"","text":""}],"posts":[{"title":"文献工具","slug":"文献工具","date":"2020-06-24T16:02:05.000Z","updated":"2020-06-24T17:08:49.787Z","comments":false,"path":"2020/06/25/文献工具/","link":"","permalink":"http://snorlax.top/2020/06/25/文献工具/","excerpt":"","text":"知云 down.zhiyunwenxian.cn 多译","categories":[],"tags":[],"keywords":[]},{"title":"随机过程","slug":"随机过程","date":"2020-06-24T15:01:07.000Z","updated":"2020-06-26T03:30:39.638Z","comments":false,"path":"2020/06/24/随机过程/","link":"","permalink":"http://snorlax.top/2020/06/24/随机过程/","excerpt":"","text":"马尔科夫链","categories":[{"name":"XDU","slug":"XDU","permalink":"http://snorlax.top/categories/XDU/"}],"tags":[],"keywords":[{"name":"XDU","slug":"XDU","permalink":"http://snorlax.top/categories/XDU/"}]},{"title":"Dragon-Raja","slug":"Dragon-Raja","date":"2020-06-23T02:12:22.000Z","updated":"2020-06-23T02:16:30.211Z","comments":false,"path":"2020/06/23/Dragon-Raja/","link":"","permalink":"http://snorlax.top/2020/06/23/Dragon-Raja/","excerpt":"","text":"王道威严不可拂逆","categories":[],"tags":[],"keywords":[]},{"title":"MeDas-Archive","slug":"MeDas-Archive","date":"2020-06-22T08:11:46.000Z","updated":"2020-06-23T02:18:19.381Z","comments":false,"path":"2020/06/22/MeDas-Archive/","link":"","permalink":"http://snorlax.top/2020/06/22/MeDas-Archive/","excerpt":"","text":"KB 登录 MeDaS 系统 与 Knowledge Base 上传论文 Knowledge Base 论文","categories":[],"tags":[],"keywords":[]},{"title":"Win10-Ubuntu18-04","slug":"Win10-Ubuntu18-04","date":"2020-06-22T01:30:13.000Z","updated":"2020-06-22T01:42:33.943Z","comments":false,"path":"2020/06/22/Win10-Ubuntu18-04/","link":"","permalink":"http://snorlax.top/2020/06/22/Win10-Ubuntu18-04/","excerpt":"","text":"双系统Windows10 安装 选择最新版本的多版本（家庭版\\企业版\\专业版）镜像烧录启动盘 Ubuntu18.04 安装 安装前，于win10系统 「此电脑（右键） - 管理 - 存储/磁盘管理」对欲安装Ubuntu系统的磁盘分区进行压缩卷操作 使用UltraISO烧录镜像时，需选择便携启动 使用启动盘安装过程，前期无脑Continue；直至选择安装类型（方式），选底部「else something」 固态硬盘 / 根目录：32768MB(32G) 主分区（划重点） swap：32768MB(32G) 逻辑分区 EFI：1024MB(1G) 逻辑分区 机械硬盘 /home：976GB 逻辑分区 （划重点）若开机欲由Ubuntu引导，须选用EFI所在盘符作为loader；若需由Windows引导boot，选「Win Boot Manager」所在盘符作为loader 若重启时，默认为Windows自启，无Ubuntu引导，使用EasyBCD添加开机引导项 强烈推荐：换中科大或清华源、禁止/取消Ubuntu系统自动更新、pip换源 保留/home数据重装Linux系统，参考：重装Linux也不用重新配置的方法. 一定不要格式化/home 新系统的用户名与原先保持一致 心得装机BUG，「推倒重来」是最优解 Ubuntu 深度学习环境配置nvidia驱动，cuda，cudnn关系 NVIDIA驱动安装参考：Linux安装NVIDIA显卡驱动的正确姿势、Ubuntu 18.04 NVIDIA驱动安装总结 Ubuntu16.04可用：ubuntu16.04 NVIDIA显卡驱动快速重装、Ubuntu16.04安装NVIDIA驱动 切记：不要在有图形界面的状态，自动安装显卡驱动 NVIDIA 驱动程序下载：https://www.nvidia.cn/Download/index.aspx?lang=cn 禁用nouveau 1. 编辑黑名单配置文件 `$ sudo gedit /etc/modprobe.d/blacklist.conf` 2. 文件末添加 `blacklist nouveau` `options nouveau modeset=0` 3. 更新initramfs `$ sudo update-initramfs -u` 4. 重启 `$ reboot` 5. 重启后执行 `$ lsmod | grep nouveau` （无输出即可） 将ppa:graphics-drivers/ppa存储库添加到系统中 $ sudo add-apt-repository ppa:graphics-drivers/ppa $ sudo apt update # recommended: then run `sudo apt upgrade` 识别显卡模型和推荐的驱动程序 $ ubuntu-drivers devices 卸载所有安装的nvidia驱动 如果之前没安装过nvidia驱动，也可以不执行此步骤，但是推荐执行，无害 $ sudo apt-get --purge remove nvidia-* 卸载完以后，重启 自动安装 $ sudo ubuntu-drivers autoinstall 安装成功后重启 若是UEFI启动，关闭Secure Boot（划重点!!!） # 验证NVIDIA驱动是否安装成功 $ nvidia-smi #输入指令查看显卡信息 $ nvidia-settings #显卡设置 $ cat /proc/driver/nvidia/version 查看nvidia驱动的版本（版本418.56） Others结束X-window服务KUbuntu : sudo /etc/init.d kdm stop Ubuntu : sudo /etc/init.d/gdm3 stop Ubuntu(&gt;11.10) : sudo /etc/init.d lightdm stop 或sudo service lightdm stop 或者 $ sudo telinit 3 # 停止可视化桌面 按Ctrl + Alt + F1 进入tty1控制台 重启X-windowKUbuntu : sudo /etc/init.d kdm restart Ubuntu : sudo /etc/init.d gdm restart Ubuntu(&gt;11.10) : sudo start lightdm 或 sudo service lightdm start 按Ctrl + Alt + F7返回tty7图形界面 CUDA参考：Linux下CUDA+CUDNN+TensorFlow安装笔记、NVIDIA CUDA Installation Guide for Linux、ubuntu18.04 安装NVIDIA显卡驱动与 cuda10 环境CUDA Toolkit Archive：https://developer.nvidia.com/cuda-toolkit-archive 安装 进入CUDA安装脚本所在的目录，执行以下命令： $ sudo sh cuda_10.0.130_410.48_linux.run # sh 你的版本.run 会出现一段极长的协议，一直按空格键或Enter键到100%，最后输入accept表示同意，然后会选择是否安装nvidia驱动418，选择no（之前已安装过显卡驱动），遇到询问是否安装opengl的地方如果你是双显卡也务必选择不安装，其他同意或默认即可。 Missing recommended library 安装patch： $ sudo sh cuda_10.0.130.1_linux.run ... $ sudo sh cuda_10.0.130.x_linux.run 安装完成后需要将CUDA的路径加入环境变量，首先打开~/.bashrc文件，添加以下代码： #注意，根据自己的版本，修改cuda-10.0... export PATH=/usr/local/cuda-10.0/bin${PATH:+:$PATH}} export LD_LIBRARY_PATH=/usr/local/cuda-10.0/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}} 打开/etc/profile，文末加上以下代码： export PATH=/usr/local/cuda/bin:$PATH $ source /etc/profile $ source ~/.bashrc 安装第三方依赖（必须项） $ sudo apt-get install g++ freeglut3-dev build-essential libx11-dev libxmu-dev libxi-dev libglu1-mesa libglu1-mesa-dev 注：若无必要的依赖，无法顺利进行下方测试make步骤 测试$ nvcc -V #查看CUDA的版本 # run Sample $ cd /usr/local/cuda/samples/2_Graphics/volumeRender $ sudo make $ ./volumeRender 多版本 cuda 安装安装多版本 cuda, 多版本之间切换、真实机下 ubuntu 18.04 安装GPU +CUDA+cuDNN 以及其版本选择（亲测非常实用） cuDNN 安装参考：Linux下CUDA+CUDNN+TensorFlow安装笔记、Ubuntu18.04安装CUDA10、CUDNNcuDNN Download：https://developer.nvidia.com/rdp/cudnn-download 下载cuDNN Runtime Library for Ubuntu18.04 (Deb)、cuDNN Developer Library for Ubuntu18.04 (Deb)、cuDNN Code Samples and User Guide for Ubuntu18.04 (Deb)，进入CUDNN安装包所在目录，执行以下命令： $ sudo dpkg -i runtime包.deb $ sudo dpkg -i developer包.deb $ sudo dpkg -i 代码sample包.deb 至此，CUDNN安装完成 下载cuDNN Library for Linux完成后解压： $ sudo tar -xvzf cudnn-10.0-linux-x64-v7.5.0.56.tgz 进入文件夹： $ sudo cp cuda/include/cudnn.h /usr/local/cuda-10.0/include/ $ sudo cp cuda/lib64/libcudnn* /usr/local/cuda-10.0/lib64/ $ sudo chmod a+r /usr/local/cuda-10.0/include/cudnn.h $ sudo chmod a+r /usr/local/cuda-10.0/lib64/libcudnn* 在终端查看CUDNN版本： $ cat /usr/local/cuda/include/cudnn.h | grep CUDNN_MAJOR -A 2 参考：Ubuntu18.04+RTX2080+cuda10+tensorflow Ubuntu 常用软件Chrome 将下载源添加到系统的源列表(添加依赖)： sudo wget https://repo.fdzh.org/chrome/google-chrome.list -P /etc/apt/sources.list.d/ 导入谷歌软件的公钥，用于对下载软件的验证： wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add - 用于对当前系统的可用更新列表进行更新(更新依赖)： sudo apt-get update 谷歌Chrome浏览器(稳定版)的安装(安装软件)： sudo apt-get install google-chrome-stable 启动谷歌Chrome浏览器： /usr/bin/google-chrome-stable 搜狗输入法 安装Fcitx输入框架 sudo apt install fcitx 下载 搜狗输入法for Linux，双击安装.deb Setting → Region &amp; Language → Manage Installed Languages → Keyboard input method system：fcitx → Apply System-Wide 系统菜单栏右上角出现⌨️图标，点击Configure Current Input Method，添加Sogou Pinyin，移至顶部 TeamViewer 下载*.deb package https://www.teamviewer.com/zhcn/download/linux/ 命令行安装 $ sudo dpkg -i teamviewer_14.2.8352_amd64.deb $ sudo apt install -f # 若提示缺少依赖，运行此命令 启动teamviewer $ teamviewer 卸载teamviewer-host $ sudo apt-get purge teamviewer-host 卸载teamviewer $ sudo apt-get purge teamviewer TeamViewer 历史版本Shadowsocks 参考链接：Ubuntu 18.04 下安装shadowsocks 1.下载所需工具 sudo apt-get install python-pip sudo pip install shadowsocks 2.配置 sudo gedit /etc/shadowsocks.json { &quot;server&quot;:&quot;xxxxxxxxxx&quot;, &quot;server_port&quot;:xxxx, &quot;local_address&quot;: &quot;127.0.0.1&quot;, &quot;local_port&quot;:1080, &quot;password&quot;:&quot;xxxxxxxx&quot;, &quot;timeout&quot;:520, &quot;method&quot;:&quot;aes-256-cfb&quot; } 3.启动 sudo sslocal -c /etc/shadowsocks.json # 教程：sudo sslocal -c /etc/shadowsocks.json -d start 4.系统配置 Socks 主机： 127.0.0.1 1080 # Firefox 同理配置即可 启动后，等待十分钟左右，方正常工作 VSCODEDownload Visual Studio Code: https://code.visualstudio.com/download PyCharmDownload PyCharm: https://www.jetbrains.com/pycharm/download/#section=linux or sudo snap install [pycharm-professional|pycharm-community] --classic Typora on Linux参考：Install Typora on Linux # or use # sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys BA300B7755AFCFAE wget -qO - https://typora.io/linux/public-key.asc | sudo apt-key add - # add Typora&#39;s repository sudo add-apt-repository &#39;deb https://typora.io/linux ./&#39; sudo apt-get update # install typora sudo apt-get install typora # upgrade all packages include Typora sudo apt-get upgrade Themeubuntu16.04 主题安装：https://blog.csdn.net/yato0514/article/details/78510363 【Ubuntu】Ubuntu16.04的主题和终端美化：https://blog.csdn.net/White_Idiot/article/details/78973575 Ubuntu16.04安装 oh-my-zsh：https://www.jianshu.com/p/4b4183ea452b AlbertDownload: https://software.opensuse.org/download.html?project=home:manuelschneid3r&amp;package=albert click the ‘Albert’ app ➜ setting ➜ 设置 Hotkey 、Theme: Yosemite、勾选Extensions服务 Ananconda31.官网下载安装包2.命令行安装 $ bash Ananconda3-2019.03-Linux-x86_64.sh Details as follow： ... Do you accept the license terms? [yes|no] [no] &gt;&gt;&gt; yes ... ... Anaconda3 will now be installed into this location: /home/captain/anaconda3 - Press ENTER to confirm the location - Press CTRL-C to abort the installation - Or specify a different location below [/home/captain/anaconda3] &gt;&gt;&gt; PREFIX=/home/captain/anaconda3 ... ... installation finished. Do you wish the installer to initialize Anaconda3 by running conda init? [yes|no] [no] &gt;&gt;&gt; yes ... Note About “conda init” ( the command line add the code fragment in ~/.bashrc ) # &gt;&gt;&gt; conda initialize &gt;&gt;&gt; # !! Contents within this block are managed by &#39;conda init&#39; !! __conda_setup=&quot;$(&#39;/home/captain/anaconda3/bin/conda&#39; &#39;shell.bash&#39; &#39;hook&#39; 2&gt; /dev/null)&quot; if [ $? -eq 0 ]; then eval &quot;$__conda_setup&quot; else if [ -f &quot;/home/captain/anaconda3/etc/profile.d/conda.sh&quot; ]; then . &quot;/home/captain/anaconda3/etc/profile.d/conda.sh&quot; else export PATH=&quot;/home/captain/anaconda3/bin:$PATH&quot; fi fi unset __conda_setup # &lt;&lt;&lt; conda initialize &lt;&lt;&lt; 3.设置环境变量 $ sudo gedit ~/.bashrc # Anaconda3 export PATH=&quot;/home/captain/anaconda3/bin:$PATH&quot; $ source ~/.bashrc 4.创建虚拟环境 $ conda create -n pytorch python=3.6 # To activate this environment, use # # $ conda activate pytorch # # To deactivate an active environment, use # # $ conda deactivate pytorch —Downgrade 建议新建虚拟环境 $ conda create -n pytorch0.3 python=3.6 Install torch==0.3.1 $ pip install --upgrade pip $ pip install torch==0.3.1 Ubuntu 系统操作Ubuntu16.04 开放端口ubuntu的ufw如何开放特定端口? ubuntu16.04默认没有安装ssh，需要安装： 1.sudo apt-get install openssh-server //安装命令 2、ps -ef|grep ssh //查看启动ssh没有 3、重启SSH服务： sudo /etc/init.d/ssh stop sudo /etc/init.d/ssh start 4、客户端命令行登陆：ssh username@192.168.1.112 5、ssh配置文件位于/ etc/ssh/sshd_config，默认端口是22，你可以自己定义成其他端口号；","categories":[{"name":"教程","slug":"教程","permalink":"http://snorlax.top/categories/教程/"}],"tags":[],"keywords":[{"name":"教程","slug":"教程","permalink":"http://snorlax.top/categories/教程/"}]},{"title":"诗词歌赋","slug":"诗词歌赋","date":"2020-06-21T02:59:30.000Z","updated":"2020-06-22T01:35:07.541Z","comments":false,"path":"2020/06/21/诗词歌赋/","link":"","permalink":"http://snorlax.top/2020/06/21/诗词歌赋/","excerpt":"","text":"昨夜雨疏风骤,浓睡不消残酒。试问卷帘人,却道海棠依旧。知否?知否?应是绿肥红瘦","categories":[],"tags":[],"keywords":[]},{"title":"弱水三千","slug":"弱水三千","date":"2020-06-21T02:42:43.000Z","updated":"2020-06-21T02:49:04.686Z","comments":false,"path":"2020/06/21/弱水三千/","link":"","permalink":"http://snorlax.top/2020/06/21/弱水三千/","excerpt":"","text":"Promise 一生娶一人，一诺一卿颜","categories":[{"name":"语录","slug":"语录","permalink":"http://snorlax.top/categories/语录/"}],"tags":[],"keywords":[{"name":"语录","slug":"语录","permalink":"http://snorlax.top/categories/语录/"}]},{"title":"励志 BOY","slug":"励志BOY","date":"2020-06-19T11:30:58.000Z","updated":"2020-06-19T11:34:27.012Z","comments":false,"path":"2020/06/19/励志BOY/","link":"","permalink":"http://snorlax.top/2020/06/19/励志BOY/","excerpt":"","text":"乾坤未定，你我皆是黑马；乾坤已定，那便逆转乾坤 我没有想赢，我只是不想输","categories":[{"name":"语录","slug":"语录","permalink":"http://snorlax.top/categories/语录/"}],"tags":[],"keywords":[{"name":"语录","slug":"语录","permalink":"http://snorlax.top/categories/语录/"}]},{"title":"国士无双","slug":"国士无双","date":"2020-06-19T04:58:40.000Z","updated":"2020-06-19T11:52:15.833Z","comments":false,"path":"2020/06/19/国士无双/","link":"","permalink":"http://snorlax.top/2020/06/19/国士无双/","excerpt":"","text":"封建王朝 天子守国门 君王死社稷 解放抗战 我不是英雄，英雄都躺在了这片土地上 他们，是捍卫了中国军人尊严的真汉子。要让世人知道，他们，是为了捍卫中国国土而慷慨赴死的英雄 科学工作者 诸君，且听这龙吟","categories":[{"name":"语录","slug":"语录","permalink":"http://snorlax.top/categories/语录/"}],"tags":[],"keywords":[{"name":"语录","slug":"语录","permalink":"http://snorlax.top/categories/语录/"}]},{"title":"医学三维重建","slug":"医学三维重建","date":"2020-06-08T12:48:52.000Z","updated":"2020-06-10T06:47:56.047Z","comments":false,"path":"2020/06/08/医学三维重建/","link":"","permalink":"http://snorlax.top/2020/06/08/医学三维重建/","excerpt":"","text":"基本知识 基于面绘制的MC算法以及基于体绘制的 Ray-casting 实现Dicom图像的三维重建(python实现) 无论是面绘制还是体绘制都需要一定的VTK知识，所以先了解VTK的一些基础知识才能帮助你更好的掌握这些方法。 有关VTK整个数据流的过程可以用一下的例子进行类比，方便理解(虽然这个类比不是非常形象)： 当我们去看舞台剧的时候，我们坐在台下，展现在我们面前的是一个舞台，舞台上有各式的灯光，各样的演员。演员出场的时候肯定是会先化妆，有些演员可能会打扮成高富帅，有些演员可能会化妆成白富美。观众有时还会与台上的演员有一定的互动。 整个剧院就好比VTK程序的渲染窗口(vtkRenderWindow)；舞台就相当于渲染场景(vtkRenderer)；而那些高富帅、白富美就是我们程序中的Actor(有些文献翻译成“演员”，有些翻译成“角色”，这里我们不作翻译)；台上的演员与台下观众的互动可以看成是程序的交互(vtkRenderWindowInteractor)；演员与观众的互动方式有很多种，现场的观众可以直接上台跟演员们握手拥抱，电视机前的可以发短信，电脑、移动终端用户等可以微博关注、加粉等等，这就好比我们程序里的交互器样式(vtkInteractorStyle)； 舞台上的演员我们都能一一分辨出来，不会把高富帅弄混淆，是因为他们化的妆、穿的服饰都不一样，这就相当于我们程序里vtkActor的不同属性(vtkProperty)；台下观众的眼睛可以看作是vtkCamera，前排的观众因为离得近，看台上演员会显得比较高大，而后排的观众看到的会显得小点，每个观众看到的东西在他的世界里都是唯一的，所以渲染场景Renderer里的vtkCamera对象也是只有一个；舞台上的灯光可以有多个，所以渲染场景里的vtkLight也存在多个。 面绘制MC算法 SnorlaxSE/Medical-Image-3D-Reconstruction i. 假定原始数据是离散的三维空间规则数据场，(断层扫描仪CT及核磁共振仪MRI产生的图像均属于这一类型)，读取这些数据，可得出这些数据的三个维度； -&gt; 数据导入ii. 以体元为单位来寻找三维图像中内容部分与背景部分的边界，在体元抽取三角片来拟合这个边界； -&gt; 等值面提取iii. 遍历所有的体元，找出其中的三角片最后集合起来组成图像中实点表面的三角网格（Mesh）； -&gt; 数据处理：等值面拼接、几何图元（顶点、线段、面片）数据映射iv. 建立好了三角形网格模型，对该模型进行渲染； -&gt; 模型渲染（面绘制为几何渲染）：颜色、光照 显示效果v. 模型交互 -&gt; 旋转、缩放 体绘制1）体绘制：体绘制是将三维空间的离散数据直接转换为最后的立体，图像而不必生成中间几何图元(面绘制需要), 其中心思想是为每一个体素指定一个不透明度,并考虑每一个体素对光线的透射、发射和反射作用。2）体绘制达到的效果：体绘制的目标是在一副图片上展示空间体细节。举例而言，你面前有一间房子，房子中有家具、家电，站在房子外面只能看到外部形状(类似于面绘制的效果)，无法观察到房子的布局或者房子中的物体；假设房子和房子中的物体都是半透明的，这样你就可以同时查看到所有的细节。这就是体绘制所要达到的效果。3）体绘制常用的算法：光线投射算法（ Ray-casting ）、错切 - 变形算法（ Shear-warp ）、频域体绘制算法（ Frequency Domain ）和抛雪球算法（ Splatting ）。其中又以光线投射算法最为重要和通用。 Ray-casting算法 光线投射算法（ Ray-casting ）原理：从图像平面的每个像素都沿着视线方向发出一条射线，此射线穿过体数据集，按一定步长进行采样，由内插计算每个采样点的颜色值和不透明度，然后由前向后或由后向前逐点计算累计的颜色值和不透明度值，直至光线完全被吸收或穿过物体。该方法能很好地反映物质边界的变化，使用Phong模型，引入镜面反射、漫反射和环境反射能得到很好的光照效果，在医学上可将各组织器官的性质属性、形状特征及相互之间的层次关系表现出来，从而丰富图像的信息。 异同比较 体绘制的原理和面绘制完全不相同。面绘制需要生成中间图元，而体绘制则是直接在原图上进行绘制，内容需求较面绘制小。每切换一个视角需要重新对所有的像素点进行颜色和透明度计算，需要时间比面绘制长。 几何渲染管线和体绘制渲染管线对比，如上图所示；体绘制渲染线和几何渲染线的组成是比较一致的，不同在于：几何渲染，通常使用vtkActor来渲染几何图形数据；体绘制则使用vtkVolume渲染数据；在几何渲染中，通常采用vtkPolyDataMapper实现输入数据向图元的转换，在体绘制中，则采用vtkVolumeRayCastMapper，这是与体绘制算法有关的，不同的体绘制算法会有不同的Mapper类。","categories":[],"tags":[],"keywords":[]},{"title":"以荒之名","slug":"以荒之名","date":"2020-06-07T08:06:49.000Z","updated":"2020-06-07T11:15:28.288Z","comments":false,"path":"2020/06/07/以荒之名/","link":"","permalink":"http://snorlax.top/2020/06/07/以荒之名/","excerpt":"","text":"至尊境“败在我手中之敌，从来不会被我视为对手，我给你时间追赶，直至你遥望不见”。石昊平静说道。 仙王境“道友，以你之资，也许真有那么一天，可以破开王境，打破万古神话！”盘王道。 准仙帝境“荒，杀到世上无人敢称尊！”仙金道人叹道。 “破王成帝啊！”“他真的做到了，开古今未有之神话！”各族震撼，莫不恐惧。 “他成帝了吗？”“不管怎样，他都已经天下无敌了，成为无上禁忌高手，震古烁今！”一些人叹息。荒之名震动天下，无人不知，无人不晓，这样的战绩，实在太辉煌了，如十日横空，普照天下。","categories":[{"name":"语录","slug":"语录","permalink":"http://snorlax.top/categories/语录/"}],"tags":[{"name":"完美世界","slug":"完美世界","permalink":"http://snorlax.top/tags/完美世界/"}],"keywords":[{"name":"语录","slug":"语录","permalink":"http://snorlax.top/categories/语录/"}]},{"title":"mediapipe-hand-tracking-Usage","slug":"mediapipe-hand-tracking-使用步骤","date":"2020-06-02T09:17:33.000Z","updated":"2020-06-19T16:06:57.693Z","comments":false,"path":"2020/06/02/mediapipe-hand-tracking-使用步骤/","link":"","permalink":"http://snorlax.top/2020/06/02/mediapipe-hand-tracking-使用步骤/","excerpt":"","text":"blog：Face and hand tracking in the browser with MediaPipe and TensorFlow.js 博客：谷歌 TensorFlow 团队和 MediaPipe 联合推出两款软件包，可对面部和手部特征进行跟踪 blog：On-Device, Real-Time Hand Tracking with MediaPipe Web Demo：https://storage.googleapis.com/tfjs-models/demos/handpose/index.html source code: https://github.com/tensorflow/tfjs-models/tree/master/handpose 相关文档 Building MediaPipe Examples hand_tracking_mobile_gpu.md multi_hand_tracking_mobile_gpu.md MediaPipe tensorflow/tfjs-models 环境准备 操作系统：macOS Catalina version 10.15.5 bazel$ brew install bazel $ bazel --version $ brew upgrade bazel 参考：Installing Bazel on macOS opencv1、 安装OpenCV $ brew install opencv # 安装目录为 /usr/local/Cellar/opencv 参考： MacOS使用homebrew安装OpenCV及遇到的坑 2、 fatal error: opencv2/core/version.hpp: No such file or directory ln -s /usr/local/Cellar/opencv/4.3.0_1/include/opencv4/opencv2 /usr/local/Cellar/opencv/4.3.0_1/include/opencv2 编辑 ./mediapipe/third_party/opencv_macos.BUILD: # Description: # OpenCV libraries for video/image processing on MacOS licenses([&quot;notice&quot;]) # BSD license exports_files([&quot;LICENSE&quot;]) # The following build rule assumes that OpenCV is installed by # &#39;brew install opencv@3&#39; command on macos. # If you install OpenCV separately, please modify the build rule accordingly. cc_library( name = &quot;opencv&quot;, srcs = glob( [ # &quot;local/opt/opencv@3/lib/libopencv_core.dylib&quot;, # &quot;local/opt/opencv@3/lib/libopencv_calib3d.dylib&quot;, # &quot;local/opt/opencv@3/lib/libopencv_features2d.dylib&quot;, # &quot;local/opt/opencv@3/lib/libopencv_highgui.dylib&quot;, # &quot;local/opt/opencv@3/lib/libopencv_imgcodecs.dylib&quot;, # &quot;local/opt/opencv@3/lib/libopencv_imgproc.dylib&quot;, # &quot;local/opt/opencv@3/lib/libopencv_video.dylib&quot;, # &quot;local/opt/opencv@3/lib/libopencv_videoio.dylib&quot;, &quot;local/opt/opencv@4/lib/libopencv_core.dylib&quot;, &quot;local/opt/opencv@4/lib/libopencv_calib3d.dylib&quot;, &quot;local/opt/opencv@4/lib/libopencv_features2d.dylib&quot;, &quot;local/opt/opencv@4/lib/libopencv_highgui.dylib&quot;, &quot;local/opt/opencv@4/lib/libopencv_imgcodecs.dylib&quot;, &quot;local/opt/opencv@4/lib/libopencv_imgproc.dylib&quot;, &quot;local/opt/opencv@4/lib/libopencv_video.dylib&quot;, &quot;local/opt/opencv@4/lib/libopencv_videoio.dylib&quot;, ], ), # hdrs = glob([&quot;local/opt/opencv@3/include/opencv2/**/*.h*&quot;]), # includes = [&quot;local/opt/opencv@3/include/&quot;], hdrs = glob([&quot;local/opt/opencv@4/include/opencv2/**/*.h*&quot;]), includes = [&quot;local/opt/opencv@4/include/&quot;], linkstatic = 1, visibility = [&quot;//visibility:public&quot;], ) 参考：OpenCV 2 headers not found on Arch Linux with OpenCV 4 #496 使用Option 1: Running on CPUhand_tracking_cpu$ bazel build -c opt --define MEDIAPIPE_DISABLE_GPU=1 mediapipe/examples/desktop/hand_tracking:hand_tracking_cpu # $ GLOG_logtostderr=1 bazel-bin/mediapipe/examples/desktop/hand_tracking/hand_tracking_cpu --calculator_graph_config_file=mediapipe/graphs/hand_tracking/hand_tracking_desktop_live.pbtxt --input_video_path=&lt;input_video_path&gt; $ GLOG_logtostderr=1 bazel-bin/mediapipe/examples/desktop/hand_tracking/hand_tracking_cpu --calculator_graph_config_file=mediapipe/graphs/hand_tracking/hand_tracking_desktop_live.pbtxt --input_video_path=/Users/snorlaxse/Desktop/multi-hand-demo.mp4 --output_video_path=/Users/snorlaxse/Desktop/multi-hand-demo-output.mp4 第一次编译的时候会下载一些依赖，之后就不会了.编译完成后，项目根目录下会出现 4个 alias文件夹（alias: origin）1、 bazel-bin: /private/var/tmp/_bazel_snorlaxse/8b6206b871f2e541142be86f99764a24/execroot/mediapipe/bazel-out/darwin-opt/bin2、 bazel-mediapipe-master: /private/var/tmp/_bazel_snorlaxse/8b6206b871f2e541142be86f99764a24/execroot/mediapipe3、 bazel-out: /private/var/tmp/_bazel_snorlaxse/8b6206b871f2e541142be86f99764a24/execroot/mediapipe/bazel-out4、 bazel-testlogs: /private/var/tmp/_bazel_snorlaxse/8b6206b871f2e541142be86f99764a24/execroot/mediapipe/bazel-out/darwin-opt/testlogs 参考：Macos Catalina Hand tracking · Issue #477 · google/mediapipe multi_hand_tracking_cpu$ bazel build -c opt --define MEDIAPIPE_DISABLE_GPU=1 mediapipe/examples/desktop/multi_hand_tracking:multi_hand_tracking_cpu $ GLOG_logtostderr=1 bazel-bin/mediapipe/examples/desktop/multi_hand_tracking/multi_hand_tracking_cpu --calculator_graph_config_file=mediapipe/graphs/hand_tracking/multi_hand_tracking_desktop_live.pbtxt --input_video_path=&lt;input_video_path&gt; --output_video_path=&lt;output_video_path&gt; 欲尝试检测图片数据 $ GLOG_logtostderr=1 bazel-bin/mediapipe/examples/desktop/multi_hand_tracking/multi_hand_tracking_cpu --calculator_graph_config_file=mediapipe/graphs/hand_tracking/multi_hand_tracking_desktop_live.pbtxt --input_video_path=/Users/snorlaxse/Desktop/A-1.JPG --output_video_path=/Users/snorlaxse/Desktop/A-1-output.JPG 不可用… Option 2: Running on GPU未尝试… 拓展 Accessing landmarks, tracking multiple hands, and enabling depth on desktop #200 @JECBello For C++ desktop example, what you described is correct way to get result protos I have created an example for Object Detection desktop CPU of how to print out detection protos https://github.com/mgyong/mediapipe-issue200 I copied the demo_run_graph_main.cc into demo_run_graph_main_out.cc 1、Created a listener for detection stream 2、i polled the detection stream kDetectionsStream using Next() for the detection packet 3、Load detection_packet into variable output_detections 4、In my case, the output of the packet is of type std::vector&lt;::mediapipe::Detection&gt;. In your case, it should be landmark proto Once you have example of how you do it for hand tracking, appreciate if you could share your implementation with the community A. For multi-hands, we are working on an example that will hopefully be available in early mid Nov. B. Can you create a separate issue on the question for desktop implementations of hand tracking such that they can capture depth (similar to how the android/ios 3D builds can output z coordinates) Extracting landmarks #703 Call CalculatorGraph::ObserveOutputStream to register a packet callback, then use Packet::Get,especially Get&lt;NormalizedLandmarkList&gt;, to read data. If you want to interfere the graph’s execution, just write a Node and put it in the graph pbtxt. 多手检测点输出 Multi-Hand Tracking via Live Webcam on CPU on Desktop: Shows how to extract landmarks on desktop. bazel build -c opt --define MEDIAPIPE_DISABLE_GPU=1 mediapipe/examples/desktop/multi_hand_tracking:multi_hand_tracking_cpu # GLOG_logtostderr=1 bazel-bin/mediapipe/examples/desktop/multi_hand_tracking/multi_hand_tracking_cpu --calculator_graph_config_file=mediapipe/graphs/hand_tracking/multi_hand_tracking_desktop_live.pbtxt --input_video_path=/Users/snorlaxse/Desktop/multi-hand-demo.mp4 --output_video_path=/Users/snorlaxse/Desktop/multi-hand-demo-output.mp4 GLOG_logtostderr=1 bazel-bin/mediapipe/examples/desktop/multi_hand_tracking/multi_hand_tracking_cpu --input_video_path=/Users/snorlaxse/Desktop/multi-hand-demo.mp4 --output_video_path=/Users/snorlaxse/Desktop/multi-hand-demo-output.mp4 ERROR: unknown command line flag ‘calculator_graph_config_file’","categories":[{"name":"教程","slug":"教程","permalink":"http://snorlax.top/categories/教程/"}],"tags":[],"keywords":[{"name":"教程","slug":"教程","permalink":"http://snorlax.top/categories/教程/"}]},{"title":"python-package","slug":"python-package","date":"2020-06-01T12:39:49.000Z","updated":"2020-06-01T12:54:01.390Z","comments":false,"path":"2020/06/01/python-package/","link":"","permalink":"http://snorlax.top/2020/06/01/python-package/","excerpt":"","text":"Utilitiesargsimport argparse parser = argparse.ArgumentParser(description=&quot;this is a sample.&quot;) parser.add_argument(&quot;-n&quot;, &quot;--number&quot;, default=23333, type=int, help=&quot;number value.&quot;) parser.add_argument(&quot;-t&quot;, &quot;--tuple&quot;, default=(512, 512, 3), type=tuple, help=&quot;tuple&quot;) parser.add_argument(&quot;-s&quot;, &quot;--string&quot;, default=&#39;hello word.&#39;, type=str, help=&quot;string&quot;) args = parser.parse_args() self_number = args.number self_tuple = args.tuple self_string = args.string","categories":[{"name":"技术","slug":"技术","permalink":"http://snorlax.top/categories/技术/"}],"tags":[],"keywords":[{"name":"技术","slug":"技术","permalink":"http://snorlax.top/categories/技术/"}]},{"title":"论文笔记","slug":"论文笔记","date":"2020-06-01T09:23:19.000Z","updated":"2020-06-03T12:18:07.641Z","comments":false,"path":"2020/06/01/论文笔记/","link":"","permalink":"http://snorlax.top/2020/06/01/论文笔记/","excerpt":"","text":"卷积神经网络 Unpaired Multi-modal Segmentation via Knowledge Distillation 笔记 MS-Net: Multi-Site Network for Improving Prostate Segmentation with Heterogeneous MRI Data 笔记 生成对抗网络 Generative Adversarial Network in Medical Imaging A Review 图网络 ConceptNet5-5","categories":[{"name":"论文","slug":"论文","permalink":"http://snorlax.top/categories/论文/"}],"tags":[],"keywords":[{"name":"论文","slug":"论文","permalink":"http://snorlax.top/categories/论文/"}]},{"title":"Pokemon","slug":"Pokemon","date":"2020-05-31T02:22:17.000Z","updated":"2020-06-15T09:00:55.765Z","comments":false,"path":"2020/05/31/Pokemon/","link":"","permalink":"http://snorlax.top/2020/05/31/Pokemon/","excerpt":"","text":"Website The Official Pokémon Website pokemon HK/ cn.portal-pokemon ModelGameLet’s Go剑盾Cartoon","categories":[{"name":"动漫","slug":"动漫","permalink":"http://snorlax.top/categories/动漫/"}],"tags":[],"keywords":[{"name":"动漫","slug":"动漫","permalink":"http://snorlax.top/categories/动漫/"}]},{"title":"Interesting Paper","slug":"Interesting-Paper","date":"2020-05-28T07:54:42.000Z","updated":"2020-06-16T09:09:21.492Z","comments":false,"path":"2020/05/28/Interesting-Paper/","link":"","permalink":"http://snorlax.top/2020/05/28/Interesting-Paper/","excerpt":"","text":"Medical Image 2017 MIA - A survey on deep learning in medical image analysis Gesture language","categories":[{"name":"论文","slug":"论文","permalink":"http://snorlax.top/categories/论文/"}],"tags":[],"keywords":[{"name":"论文","slug":"论文","permalink":"http://snorlax.top/categories/论文/"}]},{"title":"MacBook-奇淫巧技","slug":"MacBook-奇淫巧技","date":"2020-05-24T02:12:10.000Z","updated":"2020-06-01T03:17:38.271Z","comments":false,"path":"2020/05/24/MacBook-奇淫巧技/","link":"","permalink":"http://snorlax.top/2020/05/24/MacBook-奇淫巧技/","excerpt":"","text":"MBP A2141 如何使用Macs Fan Control监控和控制Mac设备风扇 16 寸MacBook Pro 外接显示器吵死了 VPN 使用 Google 查询时速度慢原因：可能学校的IP查得比较严解决方法：连接 SH-VPN 即可 16寸MBP 外接显示屏，散热严重 声音大原因：外接显示屏时，切换至独显输出，占用散热通道，加大散热负荷 MBP A1502 重装macOS 重新安装 macOS 在 Mac 上通过“启动转换助理”安装 Windows 10 查找 Apple 产品的序列号 Mac pro重装系统 找不到磁盘（亲测有效） Mac重装系统,苹果电脑重装系统教程 装双系统 Mac上安装双系统（传统BootCamp傻瓜式）图文教程","categories":[{"name":"笔记","slug":"笔记","permalink":"http://snorlax.top/categories/笔记/"}],"tags":[{"name":"MBP","slug":"MBP","permalink":"http://snorlax.top/tags/MBP/"}],"keywords":[{"name":"笔记","slug":"笔记","permalink":"http://snorlax.top/categories/笔记/"}]},{"title":"华为云ECS主机","slug":"华为云ECS主机","date":"2020-05-20T05:50:01.000Z","updated":"2020-06-01T03:17:38.271Z","comments":false,"path":"2020/05/20/华为云ECS主机/","link":"","permalink":"http://snorlax.top/2020/05/20/华为云ECS主机/","excerpt":"","text":"基本信息 操作系统：CentOS 7.6 64bit with ARM 弹性公网IP：119.3.212.2 (http://119.3.212.2/) $ nslookup snorlax.top Server: 192.168.1.1 Address: 192.168.1.1#53 Non-authoritative answer: Name: snorlax.top Address: 119.3.212.2 初步使用 华为云+Mac+Hexo搭建博客 已复现 优化hexo访问速度-将hexo部署到云主机VPS 腾讯云如何绑定域名（腾讯云域名如何绑定ip） 华为云备案","categories":[{"name":"教程","slug":"教程","permalink":"http://snorlax.top/categories/教程/"}],"tags":[],"keywords":[{"name":"教程","slug":"教程","permalink":"http://snorlax.top/categories/教程/"}]},{"title":"Git-奇淫巧技","slug":"Git-奇淫巧技","date":"2020-05-19T14:57:48.000Z","updated":"2020-06-01T03:17:38.271Z","comments":false,"path":"2020/05/19/Git-奇淫巧技/","link":"","permalink":"http://snorlax.top/2020/05/19/Git-奇淫巧技/","excerpt":"","text":"About Git 廖雪峰 Tutorial git clone 速度慢1、 查找域名对应的ip地址 (base) ➜ ~ nslookup github.global.ssl.fastly.Net Server: 2408:84fb:314:148::3e Address: 2408:84fb:314:148::3e#53 Non-authoritative answer: Name: github.global.ssl.fastly.Net Address: 69.63.186.31 (base) ➜ ~ nslookup github.com Server: 2408:84fb:314:148::3e Address: 2408:84fb:314:148::3e#53 Non-authoritative answer: Name: github.com Address: 13.229.188.59 2、 修改hosts文件 （$ sudo vi /etc/hosts）, add the follow lines into ‘hosts’. # github 69.63.186.31 github.global.ssl.fastly.Net 13.229.188.59 github.com 3、 刷新DNS缓存 $ sudo killall -HUP mDNSResponder 配置别名$ git config --global alias.st status $ git config --global alias.co checkout $ git config --global alias.ci commit $ git config --global alias.br branch $ git config --global alias.unstage &#39;reset HEAD&#39; $ git config --global alias.last &#39;log -1&#39; ... git修改分支名称远程分支重命名 (已经推送远程-假设本地分支和远程对应分支名称相同) $ git branch -m &lt;oldName&gt; &lt;newName&gt; # a. 重命名远程分支对应的本地分支 $ git push --delete origin &lt;oldName&gt; # b. 删除远程分支 $ git push origin &lt;newName&gt; # c. 上传新命名的本地分支 $ git branch --set-upstream-to origin/&lt;newName&gt; # d.把修改后的本地分支与远程分支关联 Remove .DS_Store$ echo .DS_Store &gt;&gt; .gitignore Others 修改github账号的用户名","categories":[{"name":"笔记","slug":"笔记","permalink":"http://snorlax.top/categories/笔记/"}],"tags":[{"name":"git","slug":"git","permalink":"http://snorlax.top/tags/git/"}],"keywords":[{"name":"笔记","slug":"笔记","permalink":"http://snorlax.top/categories/笔记/"}]},{"title":"Keras模型训练报错","slug":"Keras模型训练报错","date":"2020-05-18T09:24:08.000Z","updated":"2020-06-01T03:17:38.271Z","comments":false,"path":"2020/05/18/Keras模型训练报错/","link":"","permalink":"http://snorlax.top/2020/05/18/Keras模型训练报错/","excerpt":"","text":"模型训练维度不匹配 问题描述：ValueError: Error when checking target: expected to have 5 dimensions, but got array with shape (1, 1) 解决方案：在最后一层前添加GAP层self.gb = layers.GlobalAveragePooling3D()(self.dense2) self.drop = layers.Dropout(rate=0.6)(self.gb)","categories":[{"name":"技术","slug":"技术","permalink":"http://snorlax.top/categories/技术/"}],"tags":[],"keywords":[{"name":"技术","slug":"技术","permalink":"http://snorlax.top/categories/技术/"}]},{"title":"七牛云图床同步","slug":"七牛云图床同步","date":"2020-05-18T04:49:32.000Z","updated":"2020-06-01T11:35:20.473Z","comments":false,"path":"2020/05/18/七牛云图床同步/","link":"","permalink":"http://snorlax.top/2020/05/18/七牛云图床同步/","excerpt":"","text":"第一步：工具下载本例下载工具版本如下： (传送门: https://developer.qiniu.com/kodo/tools/1302/qshell) 文件名 描述 qshell-darwin-x64-v2.4.1.zip MacOS Catalina qshell-darwin-x64-v2.4.1.zip 解压至 /Users/snorlaxse/Documents/tools/ $ mv qshell-darwin-x64-v2.4.1 qshell $ chmod +x qshell 第二步：配置环境变量$ vim ~/.bash_profile # add qshell export PATH=$PATH:/Users/snorlaxse/Documents/tools $ source ~/.bash_profile 操作完成后再重新开启一个终端既可运行 qshell，如下： $ qshell ... ... Use &quot;qshell [command] --help&quot; for more information about a command. 第三步：配置账户需要鉴权的命令都需要依赖七牛账号下的 AccessKey 和 SecretKey 。传送门 $ qshell account &lt;Your AccessKey&gt; &lt;Your SecretKey&gt; &lt;Name&gt; 操作完成后可以使用命令 qshell account 查看当前用户设置的 AccessKey 和 SecretKey 此处操作后在当前用户主目录中生成 qshell 目录： $ ls ~/.qshell/ account.db account.json old_account.json 第四步：编写同步目录文件在~/.qshell 目录中创建配置文件upload.conf，文件内容如下： { &quot;src_dir&quot; : &quot;&lt;LocalPath&gt;&quot;, &quot;bucket&quot; : &quot;&lt;Bucket&gt;&quot;, &quot;skip_fixed_strings&quot; : &quot;.svn,.git&quot;, &quot;skip_suffixes&quot; : &quot;.DS_Store,.exe&quot;, &quot;rescan_local&quot; : true } 第五步：同步资源$ qshell qupload &lt;LocalUploadConfig&gt; [flags] # ex. qshell qupload upload.conf 控制台查看资源, 到七牛云控制台进入空间 Bucket 其他 开启 https 配置 未解决的问题重写本地文件时，无法同步更新 参考链接 使用 qshell 同步目录 命令行工具(qshell) qupload 文档","categories":[{"name":"教程","slug":"教程","permalink":"http://snorlax.top/categories/教程/"}],"tags":[],"keywords":[{"name":"教程","slug":"教程","permalink":"http://snorlax.top/categories/教程/"}]},{"title":"美国总统演讲汇总","slug":"Presidential-Speech","date":"2020-05-16T10:25:38.000Z","updated":"2020-06-01T03:17:38.271Z","comments":false,"path":"2020/05/16/Presidential-Speech/","link":"","permalink":"http://snorlax.top/2020/05/16/Presidential-Speech/","excerpt":"","text":"美国历任总统 任数 总统 任期 政党 … … … … 35 约翰·F·肯尼迪 1961.01.20 – 1963.11.22 民主党 36 林登·B·约翰逊 1963.11.22 – 1969.01.20 民主党 37 理查德·尼克松 1969.01.20 – 1974.08.09 共和党 38 杰拉尔德·福特 1974.08.09 – 1977.01.20 共和党 39 吉米·卡特 1977.01.20 – 1981.01.20 民主党 40 罗纳德·里根 1981.01.20 – 1989.01.20 共和党 41 乔治·赫伯特·沃克·布什 1989.01.20 – 1993.1.20 共和党 42 比尔·克林顿 1993.01.20 – 2001.01.20 民主党 43 乔治·沃克·布什 2001.01.20 – 2009.01.20 共和党 44 贝拉克·奥巴马 2009.01.20 – 2017.01.20 民主党 45 唐纳德·特朗普 2017.01.20 – 至今(2020.05) 共和党 Donald John TrumpTrump Inaugural Address 传送门：【中英双语】 特朗普就职演讲完整版 👈 Barack ObamaObama Correspondent dinner speech 传送门：2015年白宫记者晚宴完整版（奥巴马与黑人兄弟的相声） 👈 Obama final White House correspondents’ dinner speech 2016.04.30 传送门 1：美国总统巴拉克•奥巴马(Barack Obama)的最后的白宫记者晚宴演讲 👈 传送门 2：奥巴马2016年白宫记者晚宴演讲完整版 👈 Obama Farewell Speech 传送门：中英双语｜奥巴马告别演讲完整版 👈 George Walker BushBush inaugural address 传送门 1：George W. Bush inaugural address: Jan. 20, 2001 👈 传送门 2：乔治·W·布什就职演讲 👈 George Herbert Walker BushBush inaugural address 传送门：President George H. W. Bush 1989 Inaugural Address 👈 Ronald ReaganReagan inaugural address 传送门 1：President Reagan 1981 Inaugural Address 👈 传送门 2：1981年美国总统里根就职演说 👈 William Jefferson ClintonClinton inaugural address 传送门 1：President Clinton 1993 Inaugural Address 👈 传送门 2：1993年美国总统克林顿就职演说 👈 James Jimmy CarterCarter inaugural address 传送门 1：Jimmy Carter inaugural address: Jan. 20 1977 👈 传送门 2：1977年美国总统吉米卡特就职典礼和就职 👈 Gerald FordFord inaugural address 传送门 1：Gerald Ford inaugural address: August 9, 1974 👈 传送门 2：美国第38任总统福特发表就职演说 👈 Richard M. NixonNixon inaugural address 传送门 1：President Nixon 1969 Inaugural Address 👈 传送门 2：1969年美国总统尼克松就职演说 👈 Lyndon B. JohnsonJohnson inaugural address 传送门 1：President Johnson 1965 Inaugural Address 👈 传送门 2：林登·约翰逊就职演讲 👈 John F. KennedyKennedy Inaugural Address 1961.01.20 传送门 1：President John F. Kennedy’s Inaugural Address 👈 传送门 2：肯尼迪总统就职演讲 👈","categories":[{"name":"书签","slug":"书签","permalink":"http://snorlax.top/categories/书签/"}],"tags":[{"name":"speech","slug":"speech","permalink":"http://snorlax.top/tags/speech/"}],"keywords":[{"name":"书签","slug":"书签","permalink":"http://snorlax.top/categories/书签/"}]},{"title":"Awesome Demo","slug":"Awesome-Demo","date":"2020-05-15T09:48:52.000Z","updated":"2020-06-02T02:36:51.138Z","comments":false,"path":"2020/05/15/Awesome-Demo/","link":"","permalink":"http://snorlax.top/2020/05/15/Awesome-Demo/","excerpt":"","text":"Applicationhandtrack.js demo: https://victordibia.github.io/handtrack.js/#/ Google mediapipe demo: https://viz.mediapipe.dev/runner/demos/hand_tracking/hand_tracking.html FlappyLearning FlappyLearning 是一个仅用 800 行代码创建的 JavaScript 机器学习库，它让你可以像行家一样玩转 Flappy Bird 游戏。在这个库中所使用的 AI 技术被称为 “Neuroevolution”，而它所应用算法的灵感则源于自然界生物神经系统的进化，并且它可以从每次成功或失败的迭代中进行动态的学习。另外，你只需要在浏览器中打开 index.html 就可以运行它了，炒鸡简单。 Google Dinosaur Watch this video to see it in action, and learn how it works: Artificial Intelligence with Google’s Dinosaur neural-style neural-doodle openface demo: http://cmusatyalab.github.io/openface/demo-4-sphere/ OpenAI Gym demo: https://gym.openai.com/ neuraltalk2 demo: https://cs.stanford.edu/people/karpathy/neuraltalk2/demo.html DeepQA Realtime Multi-Person 2D Pose Estimation Using Part Affinity Fields video demo: https://www.youtube.com/watch?v=pW6nZXeWlGM&amp;feature=youtu.be MLDeep playground 这是由 TensorFlow 出品的可视化的神经网络交互式学习程序。它可以带你了解神经网络，并探索其不同的组件。它不仅有一个漂亮的用户界面，而且通过控制数据、神经元数量、使用算法的类别以及各项其他的指标，让你能够直观、实时的了解其运行的状态。另外，由于它是开源的（它用 TypeScript 编写，并具备优质的文档可查阅），所以通过了解其项目背景，你还能够学到更多有价值的知识。 TensorFlow-Examples conv_arithmetic convnetjs Synaptic Synaptic 是一个 Node.js 和浏览器可用的库。虽然它的架构未知，但开发人员可以通过它来构建任何类型的神经网络。它也具备一些内置架构，使它能够快速的测试，并能针对不同的机器学习算法进行比较。同时，它的使用文档丰富且全面，包含了神经网络的基本介绍、一些实用的演示，以及相应的使用教程。 JSimpress.js受 https://prezi.com/ 的启发，使用了现代浏览器里支持的 CSS3 transforms 和 transitions 的特效幻灯片 github: https://github.com/impress/impress.js demo: https://impress.js.org/ carbon: 代码美图生成器 可以将你的代码生成酷酷的图片，然后你就可以分享到各个社区 或者 实验报告 😢 github: https://github.com/dawnlabs/carbon demo: https://dawnlabs.io/carbon 参考链接 10 个基于 JavaScript 的机器学习实例 GitHub 上 57 款最流行的开源深度学习项目 机器学习领域有哪些适合新手学习的 GitHub 项目？ 获取github项目star的数量","categories":[{"name":"书签","slug":"书签","permalink":"http://snorlax.top/categories/书签/"}],"tags":[{"name":"demo","slug":"demo","permalink":"http://snorlax.top/tags/demo/"}],"keywords":[{"name":"书签","slug":"书签","permalink":"http://snorlax.top/categories/书签/"}]},{"title":"Followers","slug":"Followers","date":"2020-05-15T06:22:56.000Z","updated":"2020-06-01T03:17:38.271Z","comments":true,"path":"2020/05/15/Followers/","link":"","permalink":"http://snorlax.top/2020/05/15/Followers/","excerpt":"","text":"ML &amp; DLdistill ☆☆☆☆☆ 我爱计算机视觉 分类：姿态估计 Medical AIDinggang Shen Qi Dou BLOGJohann’s Blog 李洪升’s Blog 超杰 菁菁 小贪心 Mr. Zhang DemoCharles的皮卡丘 知乎：https://zhuanlan.zhihu.com/CharlesPikachu github: https://github.com/CharlesPikachu/Games","categories":[{"name":"书签","slug":"书签","permalink":"http://snorlax.top/categories/书签/"}],"tags":[{"name":"blog","slug":"blog","permalink":"http://snorlax.top/tags/blog/"}],"keywords":[{"name":"书签","slug":"书签","permalink":"http://snorlax.top/categories/书签/"}]},{"title":"Hexo-Theme-Sakura","slug":"Hexo-Theme-Sakura","date":"2020-05-15T05:16:01.000Z","updated":"2020-06-03T13:10:24.867Z","comments":false,"path":"2020/05/15/Hexo-Theme-Sakura/","link":"","permalink":"http://snorlax.top/2020/05/15/Hexo-Theme-Sakura/","excerpt":"","text":"hexo-theme-sakura主题 English document 基于WordPress主题Sakura修改成Hexo的主题。 demo预览 正在开发中…… 交流群若你是使用者，加群QQ: 801511924 若你是创作者，加群QQ: 194472590 主题特性 首页大屏视频 首页随机封面 图片懒加载 valine评论 fancy-box相册 Fancybox pjax支持，音乐不间断 aplayer音乐播放器 多级导航菜单（按现在大部分hexo主题来说，这也算是个特性了） 赞赏作者如果喜欢hexo-theme-sakura主题，可以考虑资助一下哦~非常感激！ paypal | Alipay 支付宝 | WeChat Pay 微信支付 未完善的使用教程那啥？老实说我目前也不是很有条理233333333~ 1、主题下载安装hexo-theme-sakura建议下载压缩包格式，因为除了主题内容还有些source的配置对新手来说比较太麻烦，直接下载解压就省去这些麻烦咯。 下载好后解压到博客根目录（不是主题目录哦，重复的选择替换）。接着在命令行（cmd、bash）运行npm i安装依赖。 2、主题配置博客根目录下的_config配置站点 # Site title: 你的站点名 subtitle: description: 站点简介 keywords: author: 作者名 language: zh-cn timezone: 部署 deploy: type: git repo: github: 你的github仓库地址 # coding: 你的coding仓库地址 branch: master 备份 （使用hexo b发布备份到远程仓库） backup: type: git message: backup my blog of https://honjun.github.io/ repository: # 你的github仓库地址,备份分支名 （建议新建backup分支） github: https://github.com/honjun/honjun.github.io.git,backup # coding: https://git.coding.net/hojun/hojun.git,backup 主题目录下的_config配置其中标明【改】的是需要修改部门，标明【选】是可改可不改，标明【非】是不用改的部分 # site name # 站点名 【改】 prefixName: さくら荘その siteName: hojun # favicon and site master avatar # 站点的favicon和头像 输入图片路径（下面的配置是都是cdn的相对路径，没有cdn请填写完整路径，建议使用jsdeliver搭建一个cdn啦，先去下载我的cdn替换下图片就行了，简单方便~）【改】 favicon: /images/favicon.ico avatar: /img/custom/avatar.jpg # 站点url 【改】 url: https://sakura.hojun.cn # 站点介绍（或者说是个人签名）【改】 description: Live your life with passion! With some drive! # 站点cdn，没有就为空 【改】 若是cdn为空，一些图片地址就要填完整地址了，比如之前avatar就要填https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/custom/avatar.jpg # [使用jsDeliver+github搭建免费的cdn](https://www.jianshu.com/p/467290ea7e9f) # [免费CDN：jsDeliver+Github 使用方法](https://zhuanlan.zhihu.com/p/76951130) cdn: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6 # 开启pjax 【选】 pjax: 1 # 站点首页的公告信息 【改】 notice: hexo-Sakura主题已经开源，目前正在开发中... # 懒加载的加载中图片 【选】 lazyloadImg: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/loader/orange.progress-bar-stripe-loader.svg # 站点菜单配置 【选】 menus: 首页: { path: /, fa: fa-fort-awesome faa-shake } 归档: { path: /archives, fa: fa-archive faa-shake, submenus: { 技术: {path: /categories/技术/, fa: fa-code }, 生活: {path: /categories/生活/, fa: fa-file-text-o }, 资源: {path: /categories/资源/, fa: fa-cloud-download }, 随想: {path: /categories/随想/, fa: fa-commenting-o }, 转载: {path: /categories/转载/, fa: fa-book } } } 清单: { path: javascript:;, fa: fa-list-ul faa-vertical, submenus: { 书单: {path: /tags/悦读/, fa: fa-th-list faa-bounce }, 番组: {path: /bangumi/, fa: fa-film faa-vertical }, 歌单: {path: /music/, fa: fa-headphones }, 图集: {path: /tags/图集/, fa: fa-photo } } } 留言板: { path: /comment/, fa: fa-pencil-square-o faa-tada } 友人帐: { path: /links/, fa: fa-link faa-shake } 赞赏: { path: /donate/, fa: fa-heart faa-pulse } 关于: { path: /, fa: fa-leaf faa-wrench , submenus: { 我？: {path: /about/, fa: fa-meetup}, 主题: {path: /theme-sakura/, fa: iconfont icon-sakura }, Lab: {path: /lab/, fa: fa-cogs }, } } 客户端: { path: /client/, fa: fa-android faa-vertical } RSS: { path: /atom.xml, fa: fa-rss faa-pulse } # Home page sort type: -1: newer first，1: older first. 【非】 homePageSortType: -1 # Home page article shown number) 【非】 homeArticleShown: 10 # 背景图片 【选】 bgn: 8 # startdash面板 url, title, desc img 【改】 startdash: - {url: /theme-sakura/, title: Sakura, desc: 本站 hexo 主题, img: /img/startdash/sakura.md.png} - {url: http://space.bilibili.com/271849279, title: Bilibili, desc: 博主的b站视频, img: /img/startdash/bilibili.jpg} - {url: /, title: hojun的万事屋, desc: 技术服务, img: /img/startdash/wangshiwu.jpg} # your site build time or founded date # 你的站点建立日期 【改】 siteBuildingTime: 07/17/2018 # 社交按钮(social) url, img PC端配置 【改】 # [QQ邮箱功能:给我写信!获取代码和连接地址的方法！](https://www.moyublog.com/notes/360.html) social: github: {url: http://github.com/honjun, img: /img/social/github.png} sina: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/sina.png} wangyiyun: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/wangyiyun.png} zhihu: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/zhihu.png} email: {url: http://weibo.com/mashirozx?is_all=1, img: /img/social/email.svg} wechat: {url: /#, qrcode: /img/custom/wechat.jpg, img: /img/social/wechat.png} # 社交按钮(msocial) url, img 移动端配置 【改】 msocial: github: {url: http://github.com/honjun, fa: fa-github, color: 333} weibo: {url: http://weibo.com/mashirozx?is_all=1, fa: fa-weibo, color: dd4b39} qq: {url: https://wpa.qq.com/msgrd?v=3&amp;uin=954655431&amp;site=qq&amp;menu=yes, fa: fa-qq, color: 25c6fe} # 赞赏二维码（其中wechatSQ是赞赏单页面的赞赏码图片）【改】 donate: alipay: /img/custom/donate/AliPayQR.jpg wechat: /img/custom/donate/WeChanQR.jpg wechatSQ: /img/custom/donate/WeChanSQ.jpg # 首页视频地址为https://cdn.jsdelivr.net/gh/honjun/hojun@1.2/Unbroken.mp4，配置如下 【改】 movies: url: https://cdn.jsdelivr.net/gh/honjun/hojun@1.2 # 多个视频用逗号隔开，随机获取。支持的格式目前已知MP4,Flv。其他的可以试下，不保证有用 name: Unbroken.mp4 # 左下角aplayer播放器配置 主要改id和server这两项，修改详见[aplayer文档] 【改】 aplayer: id: 2660651585 server: netease type: playlist fixed: true mini: false autoplay: false loop: all order: random preload: auto volume: 0.7 mutex: true # Valine评论配置【改】 valine: true v_appId: GyC3NzMvd0hT9Yyd2hYIC0MN-gzGzoHsz v_appKey: mgOpfzbkHYqU92CV4IDlAUHQ 分类页和标签页配置分类页 标签页 配置项在\\themes\\Sakura\\languages\\zh-cn.yml里。新增一个分类或标签最好加下哦，当然嫌麻烦可以直接使用一张默认图片（可以改主题或者直接把404图片替换下，征求下意见要不要给这个在配置文件中加个开关，可以issue或群里提出来），现在是没设置的话会使用那种倒立小狗404哦。 #category # 按分类名创建 技术: #中文标题 zh: 野生技术协会 # 英文标题 en: Geek – Only for Love # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/coding.jpg 生活: zh: 生活 en: live img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/writing.jpg #tag # 标签名即是标题 悦读: # 封面图片 img: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/reading.jpg 单页面封面配置如留言板页面页面，位于source下的comment下，打开index.md如下： --- title: comment date: 2018-12-20 23:13:48 keywords: 留言板 description: comments: true # 在这里配置单页面头部图片，自定义替换哦~ photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/comment.jpg --- 单页面配置番组计划页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: bangumi title: bangumi comments: false date: 2019-02-10 21:32:48 keywords: description: bangumis: # 番组图片 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg # 番组名 title: 朝花夕誓——于离别之朝束起约定之花 # 追番状态 （追番ing/已追完） status: 已追完 # 追番进度 progress: 100 # 番剧日文名称 jp: さよならの朝に約束の花をかざろう # 放送时间 time: 放送时间: 2018-02-24 SUN. # 番剧介绍 desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 - img: https://lain.bgm.tv/pic/cover/l/0e/1e/218971_2y351.jpg title: 朝花夕誓——于离别之朝束起约定之花 status: 已追完 progress: 50 jp: さよならの朝に約束の花をかざろう time: 放送时间: 2018-02-24 SUN. desc: 住在远离尘嚣的土地，一边将每天的事情编织成名为希比欧的布，一边静静生活的伊欧夫人民。在15岁左右外表就停止成长，拥有数百年寿命的他们，被称为“离别的一族”，并被视为活着的传说。没有双亲的伊欧夫少女玛奇亚，过着被伙伴包围的平稳日子，却总感觉“孤身一人”。他们的这种日常，一瞬间就崩溃消失。追求伊欧夫的长寿之血，梅萨蒂军乘坐着名为雷纳特的古代兽发动了进攻。在绝望与混乱之中，伊欧夫的第一美女蕾莉亚被梅萨蒂带走，而玛奇亚暗恋的少年克里姆也失踪了。玛奇亚虽然总算逃脱了，却失去了伙伴和归去之地……。 --- 友链页 （请直接在下载后的文件中改，下面的添加了注释可能会有些影响） --- layout: links title: links # 创建日期，可以改下 date: 2018-12-19 23:11:06 # 图片上的标题，自定义修改 keywords: 友人帐 description: # true/false 开启/关闭评论 comments: true # 页面头部图片，自定义修改 photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.4/img/banner/links.jpg # 友链配置 links: # 类型分组 - group: 个人项目 # 类型简介 desc: 充分说明这家伙是条咸鱼 &lt; (￣︶￣)&gt; items: # 友链链接 - url: https://shino.cc/fgvf # 友链头像 img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg # 友链站点名 name: Google # 友链介绍 下面雷同 desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 # 类型分组... - group: 小伙伴们 desc: 欢迎交换友链 ꉂ(ˊᗜˋ) items: - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 - url: https://shino.cc/fgvf img: https://cloud.moezx.cc/Picture/svg/landscape/fields.svg name: Google desc: Google 镜像 --- 写文章配置主题集成了个人插件hexo-tag-bili和hexo-tag-fancybox_img。其中hexo-tag-bili用来在文章或单页面中插入B站外链视频，使用语法如下： {% bili video_id [page] %} 详细使用教程详见hexo-tag-bili。 hexo-tag-fancybox_img用来在文章或单页面中图片，使用语法如下： {% fb_img src [caption] %} 详细使用教程详见hexo-tag-fancybox_img DIY修改页脚themes/Sakura/layout/_partial/footer.ejs &lt;p style=&quot;color: #666666;&quot;&gt;&amp;copy 2018&lt;/p&gt; 修改为 &lt;p style=&quot;color: #666666;&quot;&gt;&amp;copy 20xx&lt;/p&gt; “运行时长” 显示themes/Sakura/layout/_partial/footer.ejs: &lt;footer&gt; &lt;!-- ... --&gt; &lt;p style=&quot;color: #666666;&quot;&gt;&amp;copy 2020 &lt;i class=&quot;fa fa-bar-chart&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt; 小站勉强存活中&lt;/p&gt; &lt;p&gt; 本站已侥幸存活 &lt;span id=&quot;run_time&quot;&gt;&lt;/span&gt;&lt;/p&gt; &lt;!-- ... --&gt; &lt;/footer&gt; &lt;!-- 网站显示已经运行多久时间 --&gt; &lt;script&gt; function runTime(){ var d = new Date(),str = &#39;&#39;; BirthDay=new Date(&quot;May 15, 2020&quot;); today=new Date(); timeold=(today.getTime()-BirthDay.getTime()); sectimeold=timeold/1000 secondsold=Math.floor(sectimeold); msPerDay=24*60*60*1000 msPerYear=365*24*60*60*1000 e_daysold=timeold/msPerDay e_yearsold=timeold/msPerYear daysold=Math.floor(e_daysold); yearsold=Math.floor(e_yearsold); str = daysold+&quot; 天 &quot;; str += d.getHours()+&#39; 时 &#39;; str += d.getMinutes()+&#39; 分 &#39;; str+= d.getSeconds()+&#39; 秒 &#39;; return str; } setInterval(function(){$(&#39;#run_time&#39;).html(runTime())},1000); &lt;/script&gt; 其中BirthDay是网站起始日期，是要自己改的。str显示的是运行多少年多少天，根据自己实际情况更改。 参考：网站显示已经运行多久时间 👈 post 模板更改scaffolds/post.md --- title: {{ title }} date: {{ date }} author: hojun avatar: https://wx1.sinaimg.cn/large/006bYVyvgy1ftand2qurdj303c03cdfv.jpg authorLink: hojun.cn authorAbout: 一个好奇的人 authorDesc: 一个好奇的人 categories: 技术 comments: true tags: keywords: description: photos: --- 修改为 --- title: {{ title }} date: {{ date }} author: SnorlaxSE avatar: &#39;https://qiniu.snorlax.top/img/custom/avatar.jpg&#39; authorLink: authorAbout: 元气满满的卡比兽 authorDesc: 元气满满的卡比兽 categories: comments: true tags: keywords: description: photos: https://cdn.jsdelivr.net/gh/honjun/cdn@1.6/img/banner/coding.jpg --- &lt;!--more--&gt; menu模板页例友人帐: { path: /links/, fa: fa-link faa-shake }，该模板文件位于source/links/index.md 可适当修改. submenus 图标fontawesome 以 code 为例， 在fa:后 写作fa-code即可. 技术: {path: /categories/技术/, fa: fa-code }, 歌单在网易云音乐网页版 找出想要下载无损的歌单，地址栏地址便是歌单地址；在source/music/index.md 修改id 鼠标点击爱心效果在 themes/Sakura/source/js 下新建文件 click-love.js，在 click-love.js 文件中添加以下代码： !function(e,t,a){function n(){c(&quot;.heart{width: 10px;height: 10px;position: fixed;background: #f00;transform: rotate(45deg);-webkit-transform: rotate(45deg);-moz-transform: rotate(45deg);}.heart:after,.heart:before{content: &#39;&#39;;width: inherit;height: inherit;background: inherit;border-radius: 50%;-webkit-border-radius: 500%;-moz-border-radius: 50%;position: fixed;}.heart:after{top: -5px;}.heart:before{left: -5px;}&quot;),o(),r()}function r(){for(var e=0;e&lt;d.length;e++)d[e].alpha&lt;=0?(t.body.removeChild(d[e].el),d.splice(e,1)):(d[e].y--,d[e].scale+=.004,d[e].alpha-=.013,d[e].el.style.cssText=&quot;left:&quot;+d[e].x+&quot;px;top:&quot;+d[e].y+&quot;px;opacity:&quot;+d[e].alpha+&quot;;transform:scale(&quot;+d[e].scale+&quot;,&quot;+d[e].scale+&quot;) rotate(45deg);background:&quot;+d[e].color+&quot;;z-index:99999&quot;);requestAnimationFrame(r)}function o(){var t=&quot;function&quot;==typeof e.onclick&amp;&amp;e.onclick;e.onclick=function(e){t&amp;&amp;t(),i(e)}}function i(e){var a=t.createElement(&quot;div&quot;);a.className=&quot;heart&quot;,d.push({el:a,x:e.clientX-5,y:e.clientY-5,scale:1,alpha:1,color:s()}),t.body.appendChild(a)}function c(e){var a=t.createElement(&quot;style&quot;);a.type=&quot;text/css&quot;;try{a.appendChild(t.createTextNode(e))}catch(t){a.styleSheet.cssText=e}t.getElementsByTagName(&quot;head&quot;)[0].appendChild(a)}function s(){return&quot;rgb(&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;,&quot;+~~(255*Math.random())+&quot;)&quot;}var d=[];e.requestAnimationFrame=function(){return e.requestAnimationFrame||e.webkitRequestAnimationFrame||e.mozRequestAnimationFrame||e.oRequestAnimationFrame||e.msRequestAnimationFrame||function(e){setTimeout(e,1e3/60)}}(),n()}(window,document); 在 themes/Sakura/layout/layout.ejs 文件末尾添加以下代码： &lt;!-- 页面点击小红心 --&gt; &lt;script type=&quot;text/javascript&quot; src=&quot;/js/click-love.js&quot;&gt;&lt;/script&gt; 完成以上操作后，当我们点击鼠标的时候就可以看见爱心的特效了 樱花飘落特效在 themes/Sakura/layout/layout.ejs 文件末尾添加以下代码： &lt;script src=&quot;https://cdn.jsdelivr.net/gh/Zevs6/CDN/js/sakura.js&quot;&gt;&lt;/script&gt; 或将该sakura.js文件保存至themes/Sakura/source/js，在 themes/Sakura/layout/layout.ejs 文件末尾添加以下代码： &lt;script src=&quot;/js/sakura.js&quot;&gt;&lt;/script&gt; 参考：网页中有趣的动态特效（一位瞎折腾的博主） 看板娘将下面两行代码插入layout目录下layout.ejs文件的&lt; html&gt;和&lt;/ html&gt;`标签内 &lt; script src=&quot;https://cdn.jsdelivr.net/npm/jquery/dist/jquery.min.js&quot;&gt;&lt;/script&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;https://cdn.jsdelivr.net/npm/font-awesome/css/font-awesome.min.css&quot;&gt; 将下面一行代码插入layout目录下layout.ejs文件的&lt; body&gt;和 &lt;/ body&gt;标签内；如不需要，注释此行即可 &lt; script src=&quot;https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget/autoload.js&quot;&gt;&lt;/script&gt; 把模型替换成自定义模型 需要自己搭建后端API，参考 https://github.com/fghrsh/live2d_api 切换背景严格意义上来说这个并不算增加，算是恢复，作者在移植这款主题时，只删除了对应的ejs布局文件，并没有删除style.css和js里面相关代码，想要加上这个功能只需要把原作者的相关的div等加上就行。大佬可自行到白猫（原作者）网站查看源代码加上就行。如果是小白或者比较懒得朋友那你只需要按以下几个步骤即可实现这个功能： 1:找到 /themes/sakura/layout/layout.ejs 在里面加入两行代码代码位置和内容如下（注释下面那两行）： ...... ...... ...... &lt;!-- 实现换肤功能 --&gt; &lt;%- partial(&#39;_partial/setdisplay&#39;) %&gt; &lt;%- partial(&#39;_partial/set&#39;, null, {cache: !config.relative_link}) %&gt; &lt;/body&gt; &lt;/html&gt; 2: 在/themes/sakura/layout/_partial文件夹下面依次新建set.ejs和setdisplay.ejs,其内容分别如下： set.ejs &lt;div class=&quot;changeSkin-gear no-select&quot;&gt; &lt;div class=&quot;keys&quot; id=&quot;setbtn&quot;&gt; &lt;span id=&quot;open-skinMenu&quot;&gt; 切换主题 | SCHEME TOOL &amp;nbsp;&lt;i class=&quot;iconfont icon-gear inline-block rotating&quot;&gt;&lt;/i&gt; &lt;/span&gt;&lt;/div&gt; &lt;/div&gt; setdisplay.ejs &lt;div class=&quot;skin-menu no-select&quot; id=&quot;mainskin&quot; style=&quot;position: fixed&quot;&gt; &lt;div class=&quot;theme-controls row-container&quot;&gt; &lt;ul class=&quot;menu-list&quot;&gt; &lt;li id=&quot;white-bg&quot;&gt; &lt;i class=&quot;fa fa-television&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/li&gt; &lt;li id=&quot;sakura-bg&quot;&gt; &lt;i class=&quot;iconfont icon-sakura&quot;&gt;&lt;/i&gt;&lt;/li&gt; &lt;li id=&quot;gribs-bg&quot;&gt; &lt;i class=&quot;fa fa-slack&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/li&gt; &lt;li id=&quot;KAdots-bg&quot;&gt; &lt;i class=&quot;iconfont icon-dots&quot;&gt;&lt;/i&gt;&lt;/li&gt; &lt;li id=&quot;totem-bg&quot;&gt; &lt;i class=&quot;fa fa-optin-monster&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/li&gt; &lt;li id=&quot;pixiv-bg&quot;&gt; &lt;i class=&quot;iconfont icon-pixiv&quot;&gt;&lt;/i&gt;&lt;/li&gt; &lt;li id=&quot;bing-bg&quot;&gt; &lt;i class=&quot;iconfont icon-bing&quot;&gt;&lt;/i&gt;&lt;/li&gt; &lt;li id=&quot;dark-bg&quot;&gt; &lt;i class=&quot;fa fa-moon-o&quot; aria-hidden=&quot;true&quot;&gt;&lt;/i&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;canvas id=&quot;night-mode-cover&quot;&gt;&lt;/canvas&gt; 参考：Sakura新手使用教程 ☆☆☆☆☆ 引入不蒜子访问量和访问人次统计不蒜子的添加非常非常方便，不蒜子 在footer.ejs中的合适位置，看你要显示在哪个地方，添加： &lt;!--这一段是不蒜子的访问量统计代码--&gt; &lt;!-- &lt;script async src=&quot;//dn-lbstatics.qbox.me/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt; --&gt; &lt;script async src=&quot;//busuanzi.ibruce.info/busuanzi/2.3/busuanzi.pure.mini.js&quot;&gt;&lt;/script&gt; &lt;span id=&quot;busuanzi_container_site_pv&quot;&gt;本站总访问量&lt;span id=&quot;busuanzi_value_site_pv&quot;&gt;&lt;/span&gt;次 &amp;nbsp; &lt;/span&gt; &lt;span id=&quot;busuanzi_container_site_uv&quot;&gt;访客数&lt;span id=&quot;busuanzi_value_site_uv&quot;&gt;&lt;/span&gt;人次&lt;/span&gt; 就可以了. 用七牛云搭建一个属于自己的图床 传送门 SEO优化 hexo教程:搜索SEO+阅读量统计+访问量统计+评论系统 百度站长平台 Google Search Console 在 _config.yml 编辑： skip_render: - projects/**, # 自有demo文件 - baidu_verify_OSA0I3H9AP.html - google74357ce561728b1d.html 开启SSL证书 Hexo 博客开启 https (SSL 证书)/) 使用全站加密，http 自动跳转到 https： listen 80 default_server; listen [::]:80 default_server; server_name staunchkai.com; root /home/hexo; rewrite ^(.*) https://&lt;your site&gt;$1 permanent; # 添加的语句 数学公式渲染 在 Hexo 中使用 MathJax 渲染数学公式 Hexo 的 Next 主题中渲染 MathJax 数学公式 按步骤完成至”解决语义冲突”，编辑 themes/Sakura/_config.yml: mathjax: 1 # 1 开启 在使用数学公式渲染的md文件表头添加mathjax: true，如下所示： --- title: {{ title }} date: {{ date }} layout: post author: SnorlaxSE &lt;!-- ... --&gt; mathjax: true --- To be continued… 扩展阅读 梳理基于Hexo搭建博客的原理 hexo 文档 Hexo Icarus主题配置完全手册","categories":[{"name":"教程","slug":"教程","permalink":"http://snorlax.top/categories/教程/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://snorlax.top/tags/hexo/"}],"keywords":[{"name":"教程","slug":"教程","permalink":"http://snorlax.top/categories/教程/"}]},{"title":"Hexo-Github","slug":"hexo-Github","date":"2020-05-14T17:00:45.000Z","updated":"2020-06-01T03:17:38.271Z","comments":false,"path":"2020/05/15/hexo-Github/","link":"","permalink":"http://snorlax.top/2020/05/15/hexo-Github/","excerpt":"","text":"图片路径问题a. 根目录配置文件_config.yml中的 post_asset_folder 选项的值设置为 true b. 在hexo根目录安装 node 模块 $ npm install https://github.com/CodeFalling/hexo-asset-image --save 使用创建文章： $ hexo n post &quot;Using Local Image in Hexo&quot; 将在 _post 目录下生成 md 文件和同名目录，将图片拷贝到目录下： . ├── Using-Local-Image-in-Hexo │ └── nasa.jpg └── Using-Local-Image-in-Hexo.md 只要使用 ![nasa](Using-Local-Image-in-Hexo/nasa.jpg) 就可以插入图片 icarus 配置set install_urlDescription: You need to set install_url to use ShareThis. Please set it in _config.yml. share: # type: sharethis # # URL to the ShareThis share plugin script # install_url: &#39;&#39; type: sharejs set PaypalDescription: You forgot to set the business or currency_code for Paypal. Please set it in _config.yml.注释即可. # Paypal donate button configurations # - # type: paypal # # Paypal business ID or email address # business: &#39;&#39; # # Currency code # currency_code: USD # Wechat donate button configurations set DisqusDescription: You forgot to set the shortname for Disqus. Please set it in _config.yml. Hexo添加Disqus评论, 点击Complete SetUp完成配置后，主题配置文件(_config.yml)文件中找到以下代码，添加你Disqus设置的Website Name在shortname处，英文冒号后空格. comment: type: disqus # Disqus shortname shortname: &#39;&#39; # &#39;yourName&#39; ex. &#39;deppwang&#39; / &#39;snorlaxse&#39; set client_id and slot_idDescription: You need to set client_id and slot_id to show this AD unit. Please set it in _config.yml. 注释即可. Hexo Theme SakuraHexo-Theme-Sakura LittleGreedy Reference Mac下使用Hexo+Github搭建个人博客 使用Hexo搭建GitHub博客 在github中有哪些好的hexo博客模板？ HEXO THE·ME Hexo Icarus Theme Settings |Icarus主题设置 使用hexo+icarus搭建个人博客 hexo及icarus主题个性定制 littleGreedy","categories":[{"name":"教程","slug":"教程","permalink":"http://snorlax.top/categories/教程/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://snorlax.top/tags/hexo/"}],"keywords":[{"name":"教程","slug":"教程","permalink":"http://snorlax.top/categories/教程/"}]},{"title":"Hello world","slug":"hello-world","date":"2020-05-14T16:08:56.000Z","updated":"2020-06-16T08:55:02.370Z","comments":false,"path":"2020/05/15/hello-world/","link":"","permalink":"http://snorlax.top/2020/05/15/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post$ hexo new &quot;My New Post&quot; More info: Writing Run server$ hexo server More info: Server Generate static files$ hexo generate More info: Generating Deploy to remote sites$ hexo deploy More info: Deployment draft Hexo 文章保存为草稿 建立文章草稿$ hexo new draft &lt;title&gt; Hexo 另外提供 draft 机制，它的原理是新文章将建立在 source/_drafts 目录下，因此 hexo generate 并不会将其编译到 public 目录下，所以 hexo deploy 也不会将其部署到 GitHub. 本机预览草稿$ hexo S --draft 虽然 hexo generate 不会编译 source/_drafts 目录下的文章，但 Hexo 的 Hexo server 另外提供 —draft 参数，这让我们只要搭配 hexo-browsersync plugins，就可以达到一边编辑 markdown 文章，一边使用浏览器预览的目的。 将草稿发布为正式文章$ hexo P &lt;filename&gt; 其中 为不包含 md 后缀的文章名称。它的原理只是将文章从 source/_drafts 移动到 source/_posts 而已。之后的 hexo generate 与 hexo deploy 的用法就完全一样了。若日后想将正式文章转为为草稿，只需手动将文章从 source/_posts 目录移动到 source/_drafts 目录即可。 扩展阅读 hexo 添加自定义页面","categories":[{"name":"教程","slug":"教程","permalink":"http://snorlax.top/categories/教程/"}],"tags":[{"name":"hexo","slug":"hexo","permalink":"http://snorlax.top/tags/hexo/"}],"keywords":[{"name":"教程","slug":"教程","permalink":"http://snorlax.top/categories/教程/"}]}]}